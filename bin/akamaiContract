
const Tool = require('tool');
const Noi = require('noi');
const { Contract } = Noi;

function print_id( id ) {
    console.log( id );
}

function per_contract( dto ) {
    dto.map( print_id );
}

function print_contract( contract ) {
    console.log( contract.contractId + "  :  " + contract.contractTypeName );
}

function print_details( dto ) {
    console.log( "Account: " + dto.accountId );
    dto.contracts.items.map( print_contract );
}

function product_id( product ) {
    console.log( product.marketingProductId );
}

function per_product( dto ) {
    console.log( this.constructor );
    dto.products["marketing-products"].map( product_id );
}

var commands = {
    list: function () {
        if ( this.verbose ) { // use the PAPI API for details
            Contract.contracts_details( print_details );
            return;
        }
        Contract.contracts( per_contract );
    },
    show: function ( id ) {
        Contract.contract( id, dump_dto );
    },
    "products": function ( contract ) {
        let verbose = this.verbose;
        function product_info( product ) {
            let id   = product.marketingProductId;
            let name = product.marketingProductName;
            if ( verbose == false ) return console.log(id);
            console.log( id + " -- " + name );
        }
        function per_product( dto ) {
            dto.products["marketing-products"].map( product_info );
        }
        let callback = this.json ? Noi.dump_dto : per_product;
        Contract.products( contract, callback );
    },
    "account": function () {
        Contract.account( print_id );
    },
    "reporting-groups": function () {
        Contract.reporting_groups( Noi.dump_dto );
    },
    "cpcodes": function ( contractId, groupId ) {
        Contract.cpcodes( contractId, groupId, Noi.dump_dto );
    }
};

var tool = new Tool( commands );

tool.evaluate( process.argv );

/* vim: set autoindent expandtab sw=4 syntax=javascript: */
